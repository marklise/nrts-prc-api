swagger: "2.0"
info:
  version: "0.0.1"
  title: NRTS PRC API
host: localhost:3000
basePath: /api
tags:
- name: "login"
  description: "Everything about Logging in"
  externalDocs:
    description: "Find out more"
    url: "http://github.com/bcgov/nrts-prc-api.git"
- name: "application"
  description: "Operations about applications"
  externalDocs:
    description: "Find out more about our API"
    url: "http://github.com/bcgov/nrts-prc-api.git"
- name: "feature"
  description: "Operations about features"
  externalDocs:
    description: "Find out more about our API"
    url: "http://github.com/bcgov/nrts-prc-api.git"
- name: "document"
  description: "Operations about documents"
  externalDocs:
    description: "Find out more about our API"
    url: "http://github.com/bcgov/nrts-prc-api.git"
- name: "organization"
  description: "Operations about organizations"
  externalDocs:
    description: "Find out more about our API"
    url: "http://github.com/bcgov/nrts-prc-api.git"
- name: "user"
  description: "Operations about users"
  externalDocs:
    description: "Find out more about our API"
    url: "http://github.com/bcgov/nrts-prc-api.git"
- name: "search"
  description: "Operations about searching"
  externalDocs:
    description: "Find out more about our API"
    url: "http://github.com/bcgov/nrts-prc-api.git"
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.
  
  
     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.
  
  
     The following syntax must be used in the 'Authorization' header :
  
         Bearer xxxxxx.yyyyyyy.zzzzzz

consumes:
  - application/json
produces:
  - application/json

definitions:
  Authentication:
    type: object
    properties:
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"

### Application Definitions
  AppId:
    type: object
    properties:
      _id:
        type: string
        example: "54759eb3c090d83494e2d804"
  AppObject:
    type: object
    properties:
      _id:
        type: string
        example: "54759eb3c090d83494e2d804"
      tags:
        type: string
        example: "[['public']]"
        ## TODO: Add more fields here.
  Application:
    type: string
    description: "Optional fields to return."
    example: name|type
    #TODO: Fix enums
    enum: &applicationFields
      - name
      - type
      - subtype
      - purpose
      - subpurpose
      - _proponent
      - latitude
      - longitude
      - areaHectares
      - location
      - region
      - description
      - legalDescription
      - status
      - publishDate
      - businessUnit
      - cl_file
      - commodityType
      - commodity
      - commodities
      - tantalisID

### Application Definitions
  FeatureId:
    type: object
    properties:
      _id:
        type: string
        example: "54759eb3c090d83494e2d804"
  FeatureObject:
    type: object
    properties:
      _id:
        type: string
        example: "54759eb3c090d83494e2d804"
      tags:
        type: string
        example: "[['public']]"
        ## TODO: Add more fields here.
  Feature:
    type: string
    description: "Optional fields to return."
    example: name|type
    #TODO: Fix enums
    enum: &featureFields
      - type
      - tags
      - geometry
      - geometryName
      - properties
      - isDeleted
      - applicationID

### Search Definitions
  crownLandsId:
    type: string
    example: "54759eb3c090d83494e2d804"
  dtId:
    type: string
    example: "54759eb3c090d83494e2d804"
  SearchObject:
    type: object
    properties:
      _id:
        type: string
        example: "0230191"
  Search:
    type: string
    description: "Optional fields to return."
    example: name
    # TODO: Fix enums
    enum: &searchFields
      - name

### Document Definitions
  DocId:
    type: object
    properties:
      displayName:
        type: string
        example: "A cool document"
  DocObject:
    type: object
    properties:
      displayName:
        type: string
        example: "A cool document"
        ## TODO: Add more fields here.
  DocumentFields:
    type: string
    description: "Optional fields to return."
    example: name|type
    #TODO: Fix enums
    enum: &documentFields
      - displayName
      - documentFileName
      - internalURL
      - internalMime

### Comment Definitions
  CommentId:
    type: object
    properties:
      comment:
        type: string
        example: "A cool user"
  CommentObject:
    type: object
    properties:
      commentAuthor:
        type: object
        example: "A cool comment"
        ## TODO: Add more fields here.
        properties:
          contactName:
            type: string
            example: "Bob Smith"
          location:
            type: string
            example: "Victoria"
  CommentFields:
    type: string
    description: "Optional fields to return."
    example: name|commentAuthor
    #TODO: Fix enums
    enum: &commentFields
      - commentAuthor
      - comment
      - commentStatus
      - dateAdded
      - _addedBy

### Comment Definitions
  CommentPeriodId:
    type: object
    properties:
      commentperiod:
        type: string
        example: "A comment period Id"
  CommentPeriodObject:
    type: object
    properties:
      _application:
        type: string
        example: ""
      description:
        type: string
        example: "Description of comment period"
      internal:
        type: object
        example: "Victoria"
      ## TODO: Add more fields here.
  CommentPeriodFields:
    type: string
    description: "Optional fields to return."
    example: startDate|endDate|description
    #TODO: Fix enums
    enum: &commentperiodFields
      - startDate
      - endDate
      - description
      - internal
      - _application
      - _addedBy
### Decision Definitions
  DecisionId:
    type: object
    properties:
      name:
        type: string
        example: "Decision Name"
  DecisionObject:
    type: object
    properties:
      name:
        type: string
        example: "Decision Name"
      description:
        type: string
        example: "Decision Description"
        ## TODO: Add more fields here.
  DecisionFields:
    type: string
    description: "Optional fields to return."
    example: name|type
    #TODO: Fix enums
    enum: &decisionFields
      - name
      - date
      - description
      - _application
      - decisionDate

### Organization Definitions
  OrgId:
    type: object
    properties:
      _id:
        type: string
        example: "54759eb3c090d83494e2d804"
  OrgObject:
    type: object
    properties:
      _id:
        type: string
        example: "54759eb3c090d83494e2d804"
      tags:
        type: string
        example: "[['public']]"
        ## TODO: Add more fields here.
  Organization:
    type: string
    description: "Optional fields to return."
    example: name|code
    #TODO: Fix enums
    enum: &organizationFields
      - name
      - code
### User Definitions
  UserId:
    type: object
    properties:
      displayName:
        type: string
        example: "A cool user"
  UserObject:
    type: object
    properties:
      displayName:
        type: string
        example: "A cool user"

        ## TODO: Add more fields here.
  UserFields:
    type: string
    description: "Optional fields to return."
    example: displayName|roles
    #TODO: Fix enums
    enum: &userFields
      - displayName
      - firstName
      - lastName
      - username
      - roles
### Resource Definitions
  Coordinates:
    type: object
    properties:
      msg:
        type: string
  Token:
    type: object
    properties:
      token:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string

### Path Definitions
paths:
  /login/token:
    x-swagger-router-controller: login
    options:
      tags:
        - login
      operationId: loginOptions
      description: "Options for Login"
      summary: "Pre-flight request"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
    post:
      tags:
        - login
      operationId: loginPost
      description: "Get a JWT in order to access certain protected routes."
      summary: "Get a Bearer token."
      parameters:
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

### Application Routes
  /application:
    x-swagger-router-controller: application
    options:
      tags:
        - application
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Application Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - application
      summary: "Create a new application"
      operationId: protectedPost
      description: "Create a new application object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:application
      parameters:
        - name: app
          in: body
          required: true
          schema:
            $ref: "#/definitions/AppId"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - application
      summary: "Get a list of applications"
      operationId: protectedGet
      description: "Authenticated access to retreiving applications."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - in: query
          name: fields
          description: "Application fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *applicationFields
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "Applications that are deleted or not"
        - in: query
          name: tantalisId
          type: number
          required: false
          description: "Get an Application that contain this specific disposition."
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /application/{appId}:
    x-swagger-router-controller: application
    options:
      tags:
        - application
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Application GET Route"
      parameters:
        - name: appId
          in: path
          description: "ID of application to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - application
      summary: "Get an application"
      operationId: protectedGet
      description: "Authenticated access to retreiving applications."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - name: appId
          in: path
          description: "ID of application to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Application fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *applicationFields
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "Applications that are deleted or not"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - application
      summary: "Update an application"
      operationId: protectedPut
      description: "Update an application object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:application
      parameters:
        - name: appId
          in: path
          description: "ID of application to update"
          required: true
          type: "string"
        - name: AppObject
          in: body
          required: true
          schema:
            $ref: "#/definitions/AppObject"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
        - application
      summary: "Delete an application"
      operationId: protectedDelete
      description: "Delete an application object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
      parameters:
        - name: appId
          in: path
          description: "ID of application to delete"
          required: true
          type: "string"
        - name: AppObject
          in: body
          required: true
          schema:
            $ref: "#/definitions/AppObject"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /application/{appId}/publish:
    x-swagger-router-controller: application
    options:
      tags:
        - application
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Application Route"
      parameters:
        - name: appId
          in: path
          description: "ID of application to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - application
      summary: "Publish a application"
      operationId: protectedPublish
      description: "Adds the singular instance of the 'public' role to a application."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:application
        # TODO: Define publish roles.
      parameters:
        - name: appId
          in: path
          description: "ID of application to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /application/{appId}/unpublish:
    x-swagger-router-controller: application
    options:
      tags:
        - application
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Application Route"
      parameters:
        - name: appId
          in: path
          description: "ID of application to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - application
      summary: "UnPublish a application"
      operationId: protectedUnPublish
      description: "Removes the singular instance of the 'public' role to a application."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:application
        # TODO: Define publish roles.
      parameters:
        - name: appId
          in: path
          description: "ID of application to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/application:
    x-swagger-router-controller: application
    options:
      tags:
        - application
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Application Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - application
      summary: "Get a list of public applications"
      operationId: publicGet
      description: "Retreiving public applications."
      parameters:
        - in: query
          name: fields
          description: "Application fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *applicationFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/application/{appId}:
    x-swagger-router-controller: application
    options:
      tags:
        - application
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Application GET Route"
      parameters:
        - name: appId
          in: path
          description: "ID of application to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - application
      summary: "Get an application"
      operationId: publicGet
      description: "Public access to retreiving applications."
      parameters:
        - name: appId
          in: path
          description: "ID of application to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Application fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *applicationFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AppObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

### Feature Routes
  /feature:
    x-swagger-router-controller: feature
    options:
      tags:
        - feature
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Feature Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - feature
      summary: "Create a new feature"
      operationId: protectedPost
      description: "Create a new feature object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:feature
      parameters:
        - name: feature
          in: body
          required: true
          schema:
            $ref: "#/definitions/FeatureId"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - feature
      summary: "Get a list of features"
      operationId: protectedGet
      description: "Authenticated access to retreiving features."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - in: query
          name: fields
          description: "feature fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *featureFields
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "Features that are deleted or not"
        - in: query
          name: tantalisId
          type: number
          required: false
          description: "Get a Feature that contain this specific disposition."
        - in: query
          name: applicationId
          type: string
          required: false
          description: "Get a Feature that is associated with a particular application."
        - in: query
          name: coordinates
          required: false
          description: "Query fetures by coordinates."
          type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /feature/{featureId}:
    x-swagger-router-controller: feature
    options:
      tags:
        - feature
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Feature GET Route"
      parameters:
        - name: featureId
          in: path
          description: "ID of feature to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - feature
      summary: "Get an feature"
      operationId: protectedGet
      description: "Authenticated access to retreiving features."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - name: featureId
          in: path
          description: "ID of feature to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "feature fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *featureFields
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "Features that are deleted or not"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - feature
      summary: "Update an feature"
      operationId: protectedPut
      description: "Update an feature object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:feature
      parameters:
        - name: featureId
          in: path
          description: "ID of feature to update"
          required: true
          type: "string"
        - name: FeatureObject
          in: body
          required: true
          schema:
            $ref: "#/definitions/FeatureObject"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
        - feature
      summary: "Delete an feature"
      operationId: protectedDelete
      description: "Delete an feature object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
      parameters:
        - name: featureId
          in: path
          description: "ID of feature to delete"
          required: true
          type: "string"
        - name: FeatureObject
          in: body
          required: true
          schema:
            $ref: "#/definitions/FeatureObject"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /feature/{featureId}/publish:
    x-swagger-router-controller: feature
    options:
      tags:
        - feature
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on feature Route"
      parameters:
        - name: featureId
          in: path
          description: "ID of feature to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - feature
      summary: "Publish a feature"
      operationId: protectedPublish
      description: "Adds the singular instance of the 'public' role to a feature."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:feature
        # TODO: Define publish roles.
      parameters:
        - name: featureId
          in: path
          description: "ID of feature to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /feature/{featureId}/unpublish:
    x-swagger-router-controller: feature
    options:
      tags:
        - feature
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on feature Route"
      parameters:
        - name: featureId
          in: path
          description: "ID of feature to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - feature
      summary: "UnPublish a feature"
      operationId: protectedUnPublish
      description: "Removes the singular instance of the 'public' role to a feature."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:feature
        # TODO: Define publish roles.
      parameters:
        - name: featureId
          in: path
          description: "ID of feature to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/feature:
    x-swagger-router-controller: feature
    options:
      tags:
        - feature
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on feature Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - feature
      summary: "Get a list of public features"
      operationId: publicGet
      description: "Retreiving public features."
      parameters:
        - in: query
          name: fields
          description: "feature fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *featureFields
        - in: query
          name: coordinates
          required: false
          description: "Query fetures by coordinates."
          type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/feature/{featureId}:
    x-swagger-router-controller: feature
    options:
      tags:
        - feature
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on feature GET Route"
      parameters:
        - name: featureId
          in: path
          description: "ID of feature to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - feature
      summary: "Get an feature"
      operationId: publicGet
      description: "Public access to retreiving features."
      parameters:
        - name: featureId
          in: path
          description: "ID of feature to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "feature fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *featureFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/FeatureObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

## Search
  /public/search/bcgw/crownLandsId/{crownLandsId}:
    x-swagger-router-controller: search
    options:
      tags:
        - search
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Search Route"
      parameters:
        - name: crownLandsId
          in: path
          description: "ID of Crown Tenures to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SearchObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - search
      summary: "Get a list of searchable things from the bcgw"
      operationId: publicGetBCGW
      description: "Retreiving search results."
      parameters:
        - name: crownLandsId
          in: path
          description: "ID of Crown Tenures to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Search fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *searchFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SearchObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/search/bcgw/getClientsInfoByDispositionId/{dtId}:
    x-swagger-router-controller: search
    options:
      tags:
        - search
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Search Route"
      parameters:
        - name: dtId
          in: path
          description: "ID of Disposition ID to get client info on"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SearchObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - search
      summary: "Get a list of clients associated with this disposition"
      operationId: publicGetClientsInfoByDispositionId
      description: "Returns a list of client(s)."
      parameters:
        - name: dtId
          in: path
          description: "ID of Disposition ID to get client info on"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SearchObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/search/bcgw/dispositionTransactionId/{dtId}:
    x-swagger-router-controller: search
    options:
      tags:
        - search
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Search Route"
      parameters:
        - name: dtId
          in: path
          description: "ID of Tantalis Obj to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SearchObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - search
      summary: "Get a list of searchable things from the bcgw"
      operationId: publicGetBCGWDispositionTransactionId
      description: "Retreiving search results."
      parameters:
        - name: dtId
          in: path
          description: "ID of Tantalis Obj to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Search fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *searchFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SearchObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/search/dispositionTransactionId/{dtId}:
    x-swagger-router-controller: search
    options:
      tags:
        - search
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Search Route"
      parameters:
        - name: dtId
          in: path
          description: "ID of Tantalis Obj to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SearchObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - search
      summary: "Get a list of searchable things from the bcgw"
      operationId: publicGetDispositionTransactionId
      description: "Retreiving search results."
      parameters:
        - name: dtId
          in: path
          description: "ID of Tantalis Obj to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Search fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *searchFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SearchObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

## Documents
  /document:
    x-swagger-router-controller: document
    options:
      tags:
        - document
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Document Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - document
      summary: "Create a new document"
      operationId: protectedPost
      description: "Create a new document object."
      summary: "Create a new document object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:document
      consumes:
        - multipart/form-data
      parameters:
        - name: upfile
          in: formData
          description: "The file to upload."
          required: true
          type: file
        - name: _application
          in: formData
          description: "The application to bind this document to."
          required: false
          type: string
        - name: _decision
          in: formData
          description: "The decision to bind this document to."
          required: false
          type: string
        - name: _comment
          in: formData
          description: "The comment to bind this document to."
          required: false
          type: string
        - name: displayName
          in: formData
          description: "The displayName of the file."
          required: false
          type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - document
      summary: "Get a list of documents"
      operationId: protectedGet
      description: "Authenticated access to retreiving a document."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - in: query
          name: _application
          description: "Documents relating to a particular Application(s)"
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: _decision
          description: "Documents relating to a particular Decision(s)"
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: _comment
          description: "Documents relating to a particular Comment(s)"
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: fields
          description: "Document fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *documentFields
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "Documents that are deleted or not"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /document/{docId}:
    x-swagger-router-controller: document
    options:
      tags:
        - document
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Document GET Route"
      parameters:
        - name: docId
          in: path
          description: "ID of document to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - document
      summary: "Get a document"
      operationId: protectedGet
      description: "Authenticated access to retreiving a document."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - name: docId
          in: path
          description: "ID of document to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Document fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *documentFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - document
      summary: "Update/Upload a document"
      operationId: protectedPut
      description: "Update a document object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:document
      consumes:
        - multipart/form-data
      parameters:
        - name: docId
          in: path
          description: "ID of document to update"
          required: true
          type: "string"
        - name: upfile
          in: formData
          description: "The file to upload."
          required: true
          type: file
        - name: _application
          in: formData
          description: "The application to bind this document to."
          required: false
          type: string
        - name: _decision
          in: formData
          description: "The decision to bind this document to."
          required: false
          type: string
        - name: _comment
          in: formData
          description: "The comment to bind this document to."
          required: false
          type: string
        - name: displayName
          in: formData
          description: "The displayName of the file."
          required: false
          type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
        - document
      summary: "Delete a document"
      operationId: protectedDelete
      description: "Delete a document object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:document
      consumes:
        - application/json
      parameters:
        - name: docId
          in: path
          description: "ID of document to delete"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /document/{docId}/publish:
    x-swagger-router-controller: document
    options:
      tags:
        - document
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Document GET Route"
      parameters:
        - name: docId
          in: path
          description: "ID of document to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - document
      summary: "Publish a document"
      operationId: protectedPublish
      description: "Adds the singular instance of the 'public' role to a document."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:document
        # TODO: Define publish roles.
      parameters:
        - name: docId
          in: path
          description: "ID of document to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /document/{docId}/unpublish:
    x-swagger-router-controller: document
    options:
      tags:
        - document
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Document GET Route"
      parameters:
        - name: docId
          in: path
          description: "ID of document to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - document
      summary: "UnPublish a document"
      operationId: protectedUnPublish
      description: "Removes the singular instance of the 'public' role on a document."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:document
        # TODO: Define unpublish roles.
      parameters:
        - name: docId
          in: path
          description: "ID of document to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /document/{docId}/download:
    x-swagger-router-controller: document
    options:
      tags:
        - document
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Document GET Download Route"
      parameters:
        - name: docId
          in: path
          description: "ID of document to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - document
      summary: "Download a document"
      operationId: protectedDownload
      description: "Authenticated access to retreiving a document binary."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - name: docId
          in: path
          description: "ID of document to download"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/document:
    x-swagger-router-controller: document
    options:
      tags:
        - document
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Document Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - document
      summary: "Create a new document from public"
      operationId: unProtectedPost
      description: "Create a new document object from public."
      summary: "Create a new document object from public."
      consumes:
        - multipart/form-data
      parameters:
        - name: upfile
          in: formData
          description: "The file to upload."
          required: true
          type: file
        - name: _application
          in: formData
          description: "The application to bind this document to."
          required: false
          type: string
        - name: _decision
          in: formData
          description: "The decision to bind this document to."
          required: false
          type: string
        - name: _comment
          in: formData
          description: "The comment to bind this document to."
          required: false
          type: string
        - name: displayName
          in: formData
          description: "The displayName of the file."
          required: false
          type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - document
      summary: "Get a list of documents"
      operationId: publicGet
      description: "Retreiving public documents."
      parameters:
        - in: query
          name: _application
          description: "Documents relating to a particular Application(s)"
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: _decision
          description: "Documents relating to a particular Decision(s)"
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: _comment
          description: "Documents relating to a particular Comment(s)"
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: fields
          description: "Document fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *documentFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/document/{docId}:
    x-swagger-router-controller: document
    options:
      tags:
        - document
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Document GET Route"
      parameters:
        - name: docId
          in: path
          description: "ID of document to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - document
      summary: "Get a document"
      operationId: publicGet
      description: "Public access to retreiving documents."
      parameters:
        - name: docId
          in: path
          description: "ID of document to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Document fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *documentFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/document/{docId}/download:
    x-swagger-router-controller: document
    options:
      tags:
        - document
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Document GET Download Route"
      parameters:
        - name: docId
          in: path
          description: "ID of document to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - document
      summary: "Download a document"
      operationId: publicDownload
      description: "Authenticated access to retreiving a document binary."
      parameters:
        - name: docId
          in: path
          description: "ID of document to download"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DocObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
### Organizations
  /organization:
    x-swagger-router-controller: organization
    options:
      tags:
        - organization
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Organization Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - organization
      summary: "Create an organization"
      operationId: protectedPost
      description: "Create a new organization object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:organization
      parameters:
        - name: org
          in: body
          required: true
          schema:
            $ref: "#/definitions/OrgId"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - organization
      summary: "Get a list of documents"
      operationId: protectedGet
      description: "Authenticated access to retreiving organizations."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - in: query
          name: fields
          description: "Organization fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *organizationFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /organization/{orgId}:
    x-swagger-router-controller: organization
    options:
      tags:
        - organization
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Organization GET Route"
      parameters:
        - name: orgId
          in: path
          description: "ID of organization to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - organization
      summary: "Get an organization"
      operationId: protectedGet
      description: "Authenticated access to retreiving organizations."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - name: orgId
          in: path
          description: "ID of organization to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Organization fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *organizationFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - organization
      summary: "Update an organization"
      operationId: protectedPut
      description: "Update an organization object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:organization
      parameters:
        - name: orgId
          in: path
          description: "ID of organization to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /organization/{orgId}/publish:
    x-swagger-router-controller: organization
    options:
      tags:
        - organization
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Organization Route"
      parameters:
        - name: orgId
          in: path
          description: "ID of organization to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - organization
      summary: "Publish a organization"
      operationId: protectedPublish
      description: "Adds the singular instance of the 'public' role to a organization."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:organization
        # TODO: Define publish roles.
      parameters:
        - name: orgId
          in: path
          description: "ID of organization to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /organization/{orgId}/unpublish:
    x-swagger-router-controller: organization
    options:
      tags:
        - organization
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Organization Route"
      parameters:
        - name: orgId
          in: path
          description: "ID of organization to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - organization
      summary: "UnPublish a organization"
      operationId: protectedUnPublish
      description: "Removes the singular instance of the 'public' role to a organization."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:organization
        # TODO: Define publish roles.
      parameters:
        - name: orgId
          in: path
          description: "ID of organization to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/organization:
    x-swagger-router-controller: organization
    options:
      tags:
        - organization
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Organization Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - organization
      summary: "Get a list of documents"
      operationId: publicGet
      description: "Retreiving public organizations."
      parameters:
        - in: query
          name: fields
          description: "Organization fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *organizationFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/organization/{orgId}:
    x-swagger-router-controller: organization
    options:
      tags:
        - organization
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Organization GET Route"
      parameters:
        - name: orgId
          in: path
          description: "ID of organization to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - organization
      summary: "Get a document"
      operationId: publicGet
      description: "Public access to retreiving organizations."
      parameters:
        - name: orgId
          in: path
          description: "ID of organization to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Organization fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *organizationFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrgObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

### User
  /user:
    x-swagger-router-controller: user
    options:
      tags:
        - user
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on User Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - user
      summary: "Create a new user"
      operationId: protectedPost
      description: "Create a new user object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:user
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserId"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - user
      summary: "Get a list of users"
      operationId: protectedGet
      description: "Authenticated access to retreiving users."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
      parameters:
        - in: query
          name: fields
          description: "User fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *userFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /user/{userId}:
    x-swagger-router-controller: user
    options:
      tags:
        - user
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on User GET Route"
      parameters:
        - name: userId
          in: path
          description: "ID of user to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - user
      summary: "Get a user"
      operationId: protectedGet
      description: "Authenticated access to retreiving users."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
      parameters:
        - name: userId
          in: path
          description: "ID of user to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "User fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *userFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - user
      summary: "Update a user"
      operationId: protectedPut
      description: "Update a user object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:user
      parameters:
        - name: userId
          in: path
          description: "ID of user to update"
          required: true
          type: "string"
        - name: user
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserObject"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/UserObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

### Decisions
  /decision:
    x-swagger-router-controller: decision
    options:
      tags:
        - decision
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Decision Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - decision
      summary: "Create a decision"
      operationId: protectedPost
      description: "Create a new decision object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:decision
      parameters:
        - name: decision
          in: body
          required: true
          schema:
            $ref: "#/definitions/DecisionId"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - decision
      summary: "Get a list of documents"
      operationId: protectedGet
      description: "Authenticated access to retreiving decisions."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - in: query
          name: fields
          description: "Decision fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *decisionFields
        - in: query
          name: _application
          description: "Decisions relating to a particular Application(s)"
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "Decisions that are deleted or not"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /decision/{decisionId}:
    x-swagger-router-controller: decision
    options:
      tags:
        - decision
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Decision GET Route"
      parameters:
        - name: decisionId
          in: path
          description: "ID of decision to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - decision
      summary: "Get a decision"
      operationId: protectedGet
      description: "Authenticated access to retreiving decisions."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - name: decisionId
          in: path
          description: "ID of decision to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Decision fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *decisionFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - decision
      summary: "Update a decision"
      operationId: protectedPut
      description: "Update a decision object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:decision
      parameters:
        - name: decisionId
          in: path
          description: "ID of decision to update"
          required: true
          type: "string"
        - name: decision
          in: body
          required: true
          schema:
            $ref: "#/definitions/DecisionObject"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
        - decision
      summary: "Delete a decision"
      operationId: protectedDelete
      description: "Delete a decision object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:decision
      consumes:
        - application/json
      parameters:
        - name: decisionId
          in: path
          description: "ID of decision to delete"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /decision/{decisionId}/publish:
    x-swagger-router-controller: decision
    options:
      tags:
        - decision
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on decision GET Route"
      parameters:
        - name: decisionId
          in: path
          description: "ID of decision to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - decision
      summary: "Publish a decision"
      operationId: protectedPublish
      description: "Adds the singular instance of the 'public' role to a decision."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:decision
        # TODO: Define publish roles.
      parameters:
        - name: decisionId
          in: path
          description: "ID of decision to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /decision/{decisionId}/unpublish:
    x-swagger-router-controller: decision
    options:
      tags:
        - decision
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on decision GET Route"
      parameters:
        - name: decisionId
          in: path
          description: "ID of decision to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - decision
      summary: "UnPublish a decision"
      operationId: protectedUnPublish
      description: "Removes the singular instance of the 'public' role to a decision."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:decision
        # TODO: Define publish roles.
      parameters:
        - name: decisionId
          in: path
          description: "ID of decision to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/decision:
    x-swagger-router-controller: decision
    options:
      tags:
        - decision
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Decision Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - decision
      summary: "Get a list of documents"
      operationId: publicGet
      description: "Retreiving public decisions."
      parameters:
        - in: query
          name: fields
          description: "Decision fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *decisionFields
        - in: query
          name: _application
          description: "Decisions relating to a particular Application(s)"
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/decision/{decisionId}:
    x-swagger-router-controller: decision
    options:
      tags:
        - decision
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on Decision GET Route"
      parameters:
        - name: decisionId
          in: path
          description: "ID of decision to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - decision
      summary: "Get a document"
      operationId: publicGet
      description: "Public access to retreiving decisions."
      parameters:
        - name: decisionId
          in: path
          description: "ID of decision to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "Decision fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *decisionFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DecisionObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

## Comments
  /comment:
    x-swagger-router-controller: comment
    options:
      tags:
        - comment
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on comment Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - comment
      summary: "Get a list of comments"
      operationId: protectedGet
      description: "Authenticated access to retreiving a comment."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - in: query
          name: _commentPeriod
          description: "Comments relating to a particular Comment Period(s)"
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "Comments that are deleted or not"
        - in: query
          name: fields
          description: "comment fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *commentFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /comment/{CommentId}:
    x-swagger-router-controller: comment
    options:
      tags:
        - comment
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on comment GET Route"
      parameters:
        - name: CommentId
          in: path
          description: "ID of comment to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - comment
      summary: "Get a comment"
      operationId: protectedGet
      description: "Authenticated access to retreiving a comment."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - name: CommentId
          in: path
          description: "ID of comment to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "comment fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *commentFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - comment
      summary: "Update/Upload a comment"
      operationId: protectedPut
      description: "Update a comment object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:comment
      consumes:
        - multipart/form-data
      parameters:
        - name: CommentId
          in: path
          description: "ID of comment to update"
          required: true
          type: "string"
        - name: comment
          in: body
          required: true
          schema:
            $ref: "#/definitions/CommentObject"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /comment/{CommentId}/publish:
    x-swagger-router-controller: comment
    options:
      tags:
        - comment
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on comment GET Route"
      parameters:
        - name: CommentId
          in: path
          description: "ID of comment to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - comment
      summary: "Publish a comment"
      operationId: protectedPublish
      description: "Adds the singular instance of the 'public' role to a comment."
      security:
        - Bearer: []
      x-security-scopes:
        - publish:comment
        # TODO: Define publish roles.
      parameters:
        - name: CommentId
          in: path
          description: "ID of comment to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /comment/{CommentId}/unpublish:
    x-swagger-router-controller: comment
    options:
      tags:
        - comment
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on comment GET Route"
      parameters:
        - name: CommentId
          in: path
          description: "ID of comment to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - comment
      summary: "UnPublish a comment"
      operationId: protectedUnPublish
      description: "Removes the singular instance of the 'public' role on a comment."
      security:
        - Bearer: []
      x-security-scopes:
        - unpublish:comment
        # TODO: Define unpublish roles.
      parameters:
        - name: CommentId
          in: path
          description: "ID of comment to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/comment:
    x-swagger-router-controller: comment
    options:
      tags:
        - comment
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on comment Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - comment
      summary: "Create a new comment"
      operationId: unProtectedPost
      description: "Create a new comment object."
      summary: "Create a new comment object."
      parameters:
        - name: comment
          in: body
          required: true
          schema:
            $ref: "#/definitions/CommentObject"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - comment
      summary: "Get a list of comments"
      operationId: publicGet
      description: "Retreiving public comments."
      parameters:
        - in: query
          name: _commentPeriod
          description: "Comments relating to a particular Comment Period(s)"
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: fields
          description: "comment fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *commentFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/comment/{CommentId}:
    x-swagger-router-controller: comment
    options:
      tags:
        - comment
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on comment GET Route"
      parameters:
        - name: CommentId
          in: path
          description: "ID of comment to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - comment
      summary: "Get a comment"
      operationId: publicGet
      description: "Public access to retreiving comments."
      parameters:
        - name: CommentId
          in: path
          description: "ID of comment to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "comment fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *commentFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

## CommentPeriods
  /commentperiod:
    x-swagger-router-controller: commentperiod
    options:
      tags:
        - commentperiod
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on commentperiod Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - commentperiod
      summary: "Create a new commentperiod"
      operationId: protectedPost
      description: "Create a new commentperiod object."
      summary: "Create a new commentperiod object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:commentperiod
      parameters:
        - name: _commentPeriod
          in: body
          required: true
          schema:
            $ref: "#/definitions/CommentPeriodObject"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - commentperiod
      summary: "Get a list of comment periods"
      operationId: protectedGet
      description: "Authenticated access to retreiving a commentperiod."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - in: query
          name: _application
          description: "CommentPeriods relating to a particular Application(s)"
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "CommentPeriods that are deleted or not"
        - in: query
          name: fields
          description: "commentperiod fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *commentperiodFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /commentperiod/{CommentPeriodId}:
    x-swagger-router-controller: commentperiod
    options:
      tags:
        - commentperiod
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on commentperiod GET Route"
      parameters:
        - name: CommentPeriodId
          in: path
          description: "ID of commentperiod to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - commentperiod
      summary: "Get a commentperiod"
      operationId: protectedGet
      description: "Authenticated access to retreiving a commentperiod."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - user
      parameters:
        - name: CommentPeriodId
          in: path
          description: "ID of commentperiod to get"
          required: true
          type: "string"
        - in: query
          name: _application
          description: "CommentPeriods relating to a particular Application(s)"
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: fields
          description: "commentperiod fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *commentFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - commentperiod
      summary: "Update/Upload a commentperiod"
      operationId: protectedPut
      description: "Update a commentperiod object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:commentperiod
      consumes:
        - application/json
      parameters:
        - name: CommentPeriodId
          in: path
          description: "ID of commentperiod to update"
          required: true
          type: "string"
        - name: cp
          in: body
          required: true
          schema:
            $ref: "#/definitions/CommentPeriodObject"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
        - commentperiod
      summary: "Delete a commentperiod"
      operationId: protectedDelete
      description: "Delete a commentperiod object."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:commentperiod
      consumes:
        - application/json
      parameters:
        - name: CommentPeriodId
          in: path
          description: "ID of commentperiod to delete"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /commentperiod/{CommentPeriodId}/publish:
    x-swagger-router-controller: commentperiod
    options:
      tags:
        - commentperiod
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on commentperiod GET Route"
      parameters:
        - name: CommentPeriodId
          in: path
          description: "ID of commentperiod to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - commentperiod
      summary: "Publish a commentperiod"
      operationId: protectedPublish
      description: "Adds the singular instance of the 'public' role to a commentperiod."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:commentperiod
        # TODO: Define publish roles.
      parameters:
        - name: CommentPeriodId
          in: path
          description: "ID of commentperiod to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /commentperiod/{CommentPeriodId}/unpublish:
    x-swagger-router-controller: commentperiod
    options:
      tags:
        - commentperiod
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on commentperiod GET Route"
      parameters:
        - name: CommentPeriodId
          in: path
          description: "ID of commentperiod to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - commentperiod
      summary: "UnPublish a commentperiod"
      operationId: protectedUnPublish
      description: "Removes the singular instance of the 'public' role on a commentperiod."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
        - write:commentperiod
        # TODO: Define unpublish roles.
      parameters:
        - name: CommentPeriodId
          in: path
          description: "ID of commentperiod to update"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/commentperiod:
    x-swagger-router-controller: commentperiod
    options:
      tags:
        - commentperiod
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on commentperiod Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - commentperiod
      summary: "Get a list of comment period(s)"
      operationId: publicGet
      description: "Retreiving public comment period(s)."
      parameters:
        - in: query
          name: _application
          description: "CommentPeriods relating to a particular Application(s)"
          type: array
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: isDeleted
          type: boolean
          required: false
          description: "CommentPeriods that are deleted or not"
        - in: query
          name: fields
          description: "commentperiod fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *commentperiodFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/commentperiod/{CommentPeriodId}:
    x-swagger-router-controller: commentperiod
    options:
      tags:
        - commentperiod
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on commentperiod GET Route"
      parameters:
        - name: CommentPeriodId
          in: path
          description: "ID of commentperiod to get"
          required: true
          type: "string"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - commentperiod
      summary: "Get a commentperiod"
      operationId: publicGet
      description: "Public access to retreiving comments."
      parameters:
        - name: CommentPeriodId
          in: path
          description: "ID of commentperiod to get"
          required: true
          type: "string"
        - in: query
          name: fields
          description: "commentperiod fields to return."
          required: false
          type: array
          collectionFormat: pipes
          items:
            type: string
            enum: *commentFields
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/CommentPeriodObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"